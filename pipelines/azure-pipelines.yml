trigger:
  - main  # or your default branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '18.x'  # Adjust this to your Node.js version

stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: Build
    displayName: 'Build Vite React app'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: $(nodeVersion)

    - script: |
        npm ci
        npm install terser --save-dev
      displayName: 'Install dependencies'

    - script: |
        # Set environment variables for the build process
        export VITE_AUTH_BASE_URL="$(VITE_AUTH_BASE_URL)"
        export VITE_API_GATEWAY_BASE_URL="$(VITE_API_GATEWAY_BASE_URL)"
        export VITE_MAIN_PORTAL_URL="$(VITE_MAIN_PORTAL_URL)"
        export VITE_ADMIN_PORTAL_URL="$(VITE_ADMIN_PORTAL_URL)"
        export VITE_PUBLIC_IMAGES_HOST="$(VITE_PUBLIC_IMAGES_HOST)"
        export VITE_PUBLIC_IMAGES_STORE_ACCOUNT="$(VITE_PUBLIC_IMAGES_STORE_ACCOUNT)"
        export VITE_PUBLIC_TICKETS_STORE_ACCOUNT="$(VITE_PUBLIC_TICKETS_STORE_ACCOUNT)"
        export VITE_API_BASE_URL="$(VITE_API_BASE_URL)"
        # Print environment variables for debugging (remove in production)
        echo "Build environment variables:"
        env | grep VITE_ || echo "No VITE_ variables found"
        # Build the application
        npm run build -- --mode production
      displayName: 'Build Vite React app for production'

    - script: |
        echo "Checking build output..."
        ls -la dist
      displayName: 'Verify build output'
      
    - script: |
        cp web.config dist/
        cp public/deployment-info.html dist/ || echo "Warning: Could not copy deployment-info.html (might not exist yet)"
        cp public/buildinfo.js dist/ || echo "Warning: Could not copy buildinfo.js (might not exist yet)"
        # Update buildinfo.js with current timestamp
        sed -i "s/new Date().toISOString()/\"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"/" dist/buildinfo.js || echo "Failed to update buildinfo.js"
        # Create robots.txt for production
        echo -e "User-agent: *\nDisallow: /admin\nAllow: /" > dist/robots.txt
        # Create a simple health check file
        echo "<html><body>App is running</body></html>" > dist/health.html
        # Ensure dist directory permissions are set correctly
        chmod -R 755 dist/
        # Print the contents of the dist directory for verification
        find dist -type f | sort
      displayName: 'Copy web.config and create additional files'

    - task: CopyFiles@2
      displayName: 'Copy build files to artifact staging directory'
      inputs:
        SourceFolder: 'dist'  # Vite's default output directory
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: 'Deploy to Azure Web App'
    steps:
    - task: DownloadBuildArtifacts@1
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureWebApp@1
      displayName: 'Deploy to Azure Web App'
      inputs:
        azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
        appType: 'webApp'
        appName: '$(AZURE_WEBAPP_NAME)'
        package: '$(System.ArtifactsDirectory)/drop'
        deploymentMethod: 'auto'
        
    - script: |
        echo "Deployment completed. Waiting 60 seconds before verifying..."
        sleep 60
        curl -I https://$(AZURE_WEBAPP_NAME).azurewebsites.net/health.html || echo "Health check failed but deployment might still be in progress"
        curl -I https://$(AZURE_WEBAPP_NAME).azurewebsites.net/deployment-info.html || echo "Deployment info page check failed"
        echo "Note: It can sometimes take up to 5 minutes for Azure to fully process the deployment."
        echo "If you're seeing an 'app is waiting for your content' message, please wait and refresh after a few minutes."
      displayName: 'Verify deployment'
      continueOnError: 'true'
