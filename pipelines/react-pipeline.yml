trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'KinoDev.UI/**'

pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDirectory: 'KinoDev.UI'

stages:
  - stage: Build_and_Test
    displayName: 'Build and Test React App'
    jobs:
      - job: Build_Test_Job
        displayName: 'Build and Test'
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '18.x'
          displayName: 'Install Node.js'

        - task: Cache@2
          inputs:
            key: 'npm | "$(Agent.OS)" | $(workingDirectory)/package-lock.json'
            path: '$(workingDirectory)/node_modules'
            cacheHitVar: 'CACHE_RESTORED'
          displayName: 'Cache node_modules'

        - task: Npm@1
          inputs:
            command: 'ci'
            workingDir: '$(workingDirectory)'
          displayName: 'Install dependencies'
          condition: ne(variables.CACHE_RESTORED, 'true')

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(workingDirectory)'
            customCommand: 'run test'
          displayName: 'Run tests'

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(workingDirectory)'
            customCommand: 'run build'
          displayName: 'Build application'

        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/junit.xml'
            searchFolder: '$(workingDirectory)'
          displayName: 'Publish test results'
          condition: succeededOrFailed()

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(workingDirectory)/build'
            ArtifactName: 'react-app'
          displayName: 'Publish build artifacts'
